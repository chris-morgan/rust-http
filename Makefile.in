SSL_LIB ?= %SSL_LIB%
SSL_CFG ?= %SSL_CFG%
ifdef SSL_LIB
	SSL_CFG_AND_LIB=$(SSL_CFG) -L "$(SSL_LIB)"
else
	SSL_CFG_AND_LIB=$(SSL_CFG)
endif
RUSTC ?= rustc
RUSTDOC ?= rustdoc
RUSTPKG ?= rustpkg
RUSTFLAGS ?= -O $(SSL_CFG_AND_LIB) --rpath
RUST_REPOSITORY ?= ../rust
RUST_CTAGS ?= $(RUST_REPOSITORY)/src/etc/ctags.rust
VERSION=0.1-pre

codegen_files=\
	        src/codegen/branchify.rs \
	        src/codegen/main.rs \
	        src/codegen/read_method.rs \
	        src/codegen/status.rs \

libhttp_so=target/.libhttp.timestamp
http_files=\
		      $(wildcard src/http/*.rs) \
		      src/http/generated/read_method.rs \
		      src/http/generated/status.rs \
		      $(wildcard src/http/headers/*.rs) \
		      $(wildcard src/http/client/*.rs) \
		      $(wildcard src/http/server/*.rs)

http: $(libhttp_so)

Makefile: configure Makefile.in
	@echo "configure or Makefile.in changed, regenerating Makefile"
	@DOING_RECONFIGURE=1 SSL_LIB="$(SSL_LIB)" SSL_CFG="$(SSL_CFG)" ./configure
	@echo
	@echo ======================
	@echo Please run make again!
	@echo ======================
	@echo
	@exit 1

$(libhttp_so): Makefile $(http_files)
	mkdir -p target/
	$(RUSTC) $(RUSTFLAGS) src/http/lib.rs --out-dir=target
	@touch target/.libhttp.timestamp

all: http examples docs

target/codegen: $(codegen_files)
	mkdir -p target/
	$(RUSTC) src/codegen/main.rs --out-dir=target

src/http/generated:
	mkdir -p src/http/generated

src/http/generated/%.rs: target/codegen src/http/generated
	target/codegen $(patsubst src/http/generated/%,%,$@) src/http/generated/

target/%:: src/%/main.rs $(libhttp_so)
	mkdir -p "$(dir $@)"
	$(RUSTC) $(RUSTFLAGS) $< -o $@ -L target/

examples: $(patsubst src/examples/%/main.rs,target/examples/%,$(wildcard src/examples/*/main.rs)) \
		  $(patsubst src/examples/%/main.rs,target/examples/%,$(wildcard src/examples/*/*/main.rs))

docs: doc/http/index.html

doc/http/index.html: $(http_files)
	$(RUSTDOC) $(SSL_CFG_AND_LIB) src/http/lib.rs

target/tests: $(http_files)
	$(RUSTC) $(RUSTFLAGS) --test -o target/tests src/http/lib.rs

target/quicktests: $(http_files)
	$(RUSTC) $(SSL_CFG_AND_LIB) --test -o target/quicktests src/http/lib.rs

# Can't wait for everything to build, optimised too? OK, you can save some time here.
quickcheck: target/quicktests
	target/quicktests --test

check: all target/tests
	target/tests --test

clean:
	rm -rf src/http/generated/ src/http/codegen/codegen
	rm -rf target/
	rm -rf bin/ .rust/

TAGS: $(http_files)
	ctags -f TAGS --options="$(RUST_CTAGS)" -R src/http

.PHONY: all http examples docs clean check quickcheck
